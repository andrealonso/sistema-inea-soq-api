// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  nome            String
  cpf             String?
  tel             String?
  login           String        @unique
  senha           String
  ativo_status    Ativo_status? @relation(fields: [ativo_status_id], references: [id])
  ativo_status_id Int?
  user_tipo       User_tipo?    @relation(fields: [user_tipo_id], references: [id])
  user_tipo_id    Int?
  empresas        Empresas?     @relation(fields: [empresas_id], references: [id])
  empresas_id     Int?

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("usuarios")
}

model Ativo_status {
  id        Int    @id @default(autoincrement())
  descricao String @unique
  usuarios  User[]

  @@map("ativo_status")
}

model Proprietarios {
  id          Int            @id @default(autoincrement())
  nome        String
  cpf         String
  email       String?
  telefone    String?
  cep         String?
  rua         String
  num         String?
  bairro      String
  cidade      String
  uf          String
  obs         String?        @db.Text
  propriedade Propriedades[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("proprietarios")
}

model Representantes {
  id          Int            @id @default(autoincrement())
  nome        String
  cpf         String
  email       String?
  telefone    String?
  cep         String?
  rua         String
  num         String?
  bairro      String
  cidade      String
  uf          String
  obs         String?        @db.Text
  propriedade Propriedades[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("representantes")
}

model User_tipo {
  id        Int    @id @default(autoincrement())
  descricao String
  usuarios  User[]

  @@map("user_tipo")
}

model Empresas {
  id            Int     @id @default(autoincrement())
  nome          String
  cnpj          String
  email         String?
  telefone      String?
  contato_nome  String?
  contato_tel   String?
  obs           String? @db.Text
  cep           String?
  rua           String?
  num           String?
  bairro        String?
  cidade        String?
  uf            String?
  parceira_inea Boolean @default(false)
  usuarios      User[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("empresas")
}

model Propriedades {
  id               Int             @id @default(autoincrement())
  nome             String
  car              String?
  area             Decimal         @default(0)
  area_cana        Decimal         @default(0)
  geolocal         String?
  cep              String?
  rua              String
  num              String?
  bairro           String
  cidade           String
  uf               String
  obs              String?         @db.Text
  representantes   Representantes? @relation(fields: [representante_id], references: [id])
  representante_id Int?
  proprietarios    Proprietarios?  @relation(fields: [proprietario_id], references: [id])
  proprietario_id  Int?

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("propriedades")
}

model Documentos {
  id             Int          @id @default(autoincrement())
  nome           String
  descricao      String
  doc_destino    Doc_destino? @relation(fields: [doc_destino_id], references: [id])
  doc_destino_id Int?

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("documentos")
}

model Doc_destino {
  id         Int          @id @default(autoincrement())
  descricao  String
  documentos Documentos[]

  @@map("doc_destino")
}
