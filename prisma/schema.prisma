// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  nome            String
  cpf             String?
  tel             String?
  login           String        @unique
  senha           String
  ativo_status    Ativo_status? @relation(fields: [ativo_status_id], references: [id])
  ativo_status_id Int?
  user_tipo       User_tipo?    @relation(fields: [user_tipo_id], references: [id])
  user_tipo_id    Int?
  empresas        Empresas?     @relation(fields: [empresas_id], references: [id])
  empresas_id     Int?
  agendamentos    Agenda[]
  denuncias       Denuncias[]
  logs            Logs[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("usuarios")
}

model Ativo_status {
  id        Int    @id @default(autoincrement())
  descricao String @unique
  usuarios  User[]

  @@map("ativo_status")
}

model Proprietarios {
  id          Int            @id @default(autoincrement())
  nome        String
  cpf         String
  email       String?
  telefone    String?
  cep         String?
  rua         String
  num         String?
  bairro      String
  cidade      String
  uf          String
  obs         String?        @db.Text
  propriedade Propriedades[]
  documentos  Documentos[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("proprietarios")
}

model Representantes {
  id          Int            @id @default(autoincrement())
  nome        String
  cpf         String
  email       String?
  telefone    String?
  cep         String?
  rua         String
  num         String?
  bairro      String
  cidade      String
  uf          String
  obs         String?        @db.Text
  propriedade Propriedades[]
  documentos  Documentos[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("representantes")
}

model User_tipo {
  id        Int    @id @default(autoincrement())
  descricao String
  usuarios  User[]

  @@map("user_tipo")
}

model Empresas {
  id            Int      @id @default(autoincrement())
  nome          String
  cnpj          String
  email         String?
  telefone      String?
  contato_nome  String?
  contato_tel   String?
  obs           String?  @db.Text
  cep           String?
  rua           String?
  num           String?
  bairro        String?
  cidade        String?
  uf            String?
  parceira_inea Boolean  @default(false)
  usuarios      User[]
  agendamentos  Agenda[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("empresas")
}

model Propriedades {
  id               Int             @id @default(autoincrement())
  nome             String
  car              String?
  area             Decimal         @default(0)
  area_cana        Decimal         @default(0)
  geolocal         String?         @db.VarChar(255)
  cep              String?
  rua              String
  num              String?
  bairro           String
  cidade           String
  uf               String
  obs              String?         @db.Text
  representantes   Representantes? @relation(fields: [representante_id], references: [id])
  representante_id Int?
  proprietarios    Proprietarios?  @relation(fields: [proprietario_id], references: [id])
  proprietario_id  Int?
  agendamentos     Agenda[]
  documentos       Documentos[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("propriedades")
}

model Documentos {
  id                Int             @id @default(autoincrement())
  nome              String
  descricao         String
  ext               String
  storage           String?
  propriedades      Propriedades?   @relation(fields: [propriedades_id], references: [id])
  propriedades_id   Int?
  representantes    Representantes? @relation(fields: [representantes_id], references: [id])
  representantes_id Int?
  proprietarios     Proprietarios?  @relation(fields: [proprietarios_id], references: [id])
  proprietarios_id  Int?
  agenda            Agenda?         @relation(fields: [agenda_id], references: [id])
  agenda_id         Int?
  denuncias         Denuncias?      @relation(fields: [denuncia_id], references: [id])
  denuncia_id       Int?

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("documentos")
}

model Agenda {
  id                  Int            @id @default(autoincrement())
  data_inicio         DateTime
  data_fim            DateTime
  talhao              String
  area_queima         Decimal
  ordem_corte_interna String?
  obs                 String?        @db.Text
  propriedades        Propriedades?  @relation(fields: [propriedades_id], references: [id])
  propriedades_id     Int?
  empresas            Empresas?      @relation(fields: [empresas_id], references: [id])
  empresas_id         Int?
  user                User?          @relation(fields: [user_id], references: [id])
  user_id             Int?
  documentos          Documentos[]
  denuncias           Denuncias[]
  agenda_Status       Agenda_Status? @relation(fields: [agenda_Status_id], references: [id])
  agenda_Status_id    Int?           @default(1)
  mudancas_datas      Mudar_datas[]

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@map("agenda")
}

model Agenda_Status {
  id        Int      @id @default(autoincrement())
  descricao String
  agenda    Agenda[]

  @@map("agenda_status")
}

model Denuncias {
  id         Int          @id @default(autoincrement())
  descricao  String
  data       DateTime
  num_bo     String
  documentos Documentos[]
  agenda     Agenda?      @relation(fields: [agenda_id], references: [id])
  agenda_id  Int?
  user       User?        @relation(fields: [user_id], references: [id])
  user_id    Int?
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  deleted_at DateTime?

  @@map("denuncias")
}

model Mudar_datas {
  id              Int      @id @default(autoincrement())
  descricao       String
  data_inicio_old DateTime
  data_fim_old    DateTime
  data_inicio_new DateTime
  data_fim_new    DateTime
  agenda          Agenda?  @relation(fields: [agenda_id], references: [id])
  agenda_id       Int?

  @@map("mudar_datas")
}

model Logs {
  id          Int      @id @default(autoincrement())
  entidade    String
  acao        String
  registro_id Int
  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
  data_hora   DateTime
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("logs")
}

model configSistem {
  id                    Int      @id @default(autoincrement())
  ativar_envio          Boolean?
  mail_user             String?
  mail_pass             String?
  mail_smtp             String?
  mail_port             String?
  mail_ssl              String?
  mail_from             String?
  prazo_alteracao_ordem Int?

  @@map("config_sistem")
}
